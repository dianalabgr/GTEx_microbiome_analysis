#Read the file with the names of the samples that we will use 
with open('samples.txt') as fh:
    samples = [line.strip() for line in fh]
#    print(samples)

#rule for making all outputs
rule rule_all:
    input: 
        expand("QCed/QCed_{sample}_1.fastq.gz", sample=samples),
        expand("QCed/QCed_{sample}_2.fastq.gz", sample=samples),
        expand("fastqc_afterQC/QCed_{sample}_1_fastqc.html", sample=samples),
        expand("fastqc_afterQC/QCed_{sample}_2_fastqc.html", sample=samples),
        expand("logs_unmapped/{sample}.unmapped.log", sample=samples),
        expand("logs_QC/{sample}.QCed.log", sample=samples)
           

#Rule to make the bam file fastq files
rule bam_to_fastq:
    input:
        "../download_samples/unmapped/{sample}.unmapped.bam"
    output:
        R1="unmappedFastQ/{sample}_unmapped_1.fq",
        R2="unmappedFastQ/{sample}_unmapped_2.fq"
    shell:
        r"""
        #echo "unmappedFastQ/"{wildcards.sample}"_unmapped_sorted.bam"
        samtools sort -n {input} -o "unmappedFastQ/"{wildcards.sample}"_unmapped_sorted.bam"
        /mnt/raid1/argis/tools/bedtools/bedtools2/bin/bamToFastq -i "unmappedFastQ/"{wildcards.sample}"_unmapped_sorted.bam" -fq {output.R1} -fq2 {output.R2}
        rm unmappedFastQ/"{wildcards.sample}"_unmapped_sorted.bam
        """
        

#Rule to quality trimming the reads 
rule trimming:
    input:
        R1="unmappedFastQ/{sample}_unmapped_1.fq",
        R2="unmappedFastQ/{sample}_unmapped_2.fq"
    output:
        R1="QCed/QCed_{sample}_1.fastq.gz",
        R2="QCed/QCed_{sample}_2.fastq.gz"
    shell:
        r"""
        atropos -o {output.R1} -p {output.R2} -pe1 {input.R1} -pe2 {input.R2} -q 15,15 --minimum-length 35 -a ATCGGAAGAGCACA -A ATCGGAAGAGCGTC --report-file "QCed/Atropos_"{wildcards.sample}"_log.txt"
        rm {input.R1}
        rm {input.R2}
        """

#Rule to run fastqc for QCed reads
rule fastqc_afterQC:
    input: 
        R1="QCed/QCed_{sample}_1.fastq.gz",
        R2="QCed/QCed_{sample}_2.fastq.gz"
    output:
        "fastqc_afterQC/QCed_{sample}_1_fastqc.html",
        "fastqc_afterQC/QCed_{sample}_2_fastqc.html"
    shell:
        """
        export _JAVA_OPTIONS=-Djavax.accessibility.assistive_technologies=
        fastqc {input.R1} {input.R2} -o fastqc_afterQC
        """
  
#Rule to find the number of unmapped
rule find_unmapped:
    input:
        "../download_samples/unmapped/{sample}.unmapped.bam"
    output:
        "logs_unmapped/{sample}.unmapped.log"
    shell:
        r"""
		txt1=$(samtools fasta {input} | grep ">" | wc -l)
		echo {wildcards.sample} $txt1 > {output}
        """
        

#Rule to find the number of QCed reads
rule find_QCed:
    input:
        "QCed/QCed_{sample}_1.fastq.gz",
    output:
        "logs_QC/{sample}.QCed.log"
    shell:
        r"""
		txt2=$(($(zcat {input} | wc -l)/2))
		echo {wildcards.sample} $txt2 > {output}
        """

